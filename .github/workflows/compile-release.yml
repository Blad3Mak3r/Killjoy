name: Publish Docker image (Release)

on:
  release:
    types: [ published ]

jobs:

  push:

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2.3.4

      - name: Set up JDK 13
        uses: actions/setup-java@v2
        with:
          java-version: 13
          distribution: zulu

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        run: ./gradlew shadowJar --no-daemon -i --stacktrace

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties

      - name: Get release version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image and push to Docker Hub
        uses: docker/build-push-action@v2.5.0
        id: docker_build
        with:
          push: true
          platforms: linux/amd64
          tags: blademaker/killjoy:${{ steps.get_version.outputs.VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
      - name: Publish image to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startswith(github.ref, 'refs/tags/')
        with:
          files: build/libs/Killjoy.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
